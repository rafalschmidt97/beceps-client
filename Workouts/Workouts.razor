@page "/workouts"
@using Beceps.Shared.Services
@using Microsoft.Extensions.Configuration
@using Beceps.Shared.Domain
@using Beceps.Shared.Components.Header;
@inject HttpClient Http
@inject NavigationManager LocalNavigationManager
@inject WorkoutState WorkoutState
@inject IConfiguration Configuration
@inject IJSRuntime jsRuntime;

<Header Title="Workouts" Icon="fa-sign-out-alt" IconText="Logout" />

@if (WorkoutState.Workouts != null)
{
    @foreach (var workout in WorkoutState.Workouts.Select((value, i) => new { i, value }))
    {
        <div class="card mt-5 mx-auto" @onclick="(() => ViewWorkoutDetails(workout.i))">
            <div class="card-body">
                <h5 class="card-title">@workout.value.Name</h5>
                <ul class="list-group">
                    @foreach (var routine in workout.value.Routines)
                    {
                        <li class="list-group-item">@routine.WeekDay @routine.Name</li>
                    }
                </ul>
            </div>
        </div>
    }
}

<button type="button" class="btn btn-primary btn-circle position-fixed" @onclick="AddWorkout">+</button>

@code {
    protected override async Task OnInitializedAsync()
    {
        try
        {
            Console.WriteLine("lol");
            if (string.IsNullOrEmpty(HttpClientExtensions.AccessToken))
            {
                await jsRuntime.InvokeAsync<string>("console.log", $"access token is null or empty");
            }
            await jsRuntime.InvokeAsync<string>("console.log", $"{@Configuration["AppUrl"]}/workouts");
            await jsRuntime.InvokeAsync<string>("console.log", $"{HttpClientExtensions.AccessToken}");
            WorkoutState.Workouts = await Http.Get<IList<WorkoutDto>>($"{@Configuration["AppUrl"]}/workouts");
        }
        catch (Exception e)
        {
            System.Diagnostics.Debug.WriteLine(e);
            await jsRuntime.InvokeAsync<string>("console.log", $"{e}");
            throw;
        }
    }

    public void ViewWorkoutDetails(int workoutIndex)
    {
        LocalNavigationManager.NavigateTo($"/workouts/details/{workoutIndex}");
    }

    public void AddWorkout()
    {
        LocalNavigationManager.NavigateTo("/workouts/add/workout");
    }

    public void Logout()
    {
        HttpClientExtensions.AccessToken = "";
        LocalNavigationManager.NavigateTo($"/");
    }
}
