@page "/history/{workoutName}"
@using Beceps.Shared.Services
@using Microsoft.Extensions.Configuration
@inject HttpClient Http
@inject IConfiguration Configuration
@inject NavigationManager LocalNavigationManager

<Header Title=@($"{WorkoutName} History") />
@if (Workout != null && Exercises.Exercises.Count != 0)
{
    <div class="w-75 mt-5 mx-auto">
        @foreach (var exercise in Exercises.Exercises)
        {
            <div class="mt-3">
                <a class="list-group-item">
                    @exercise.Name
                    @foreach (var repsAmount in exercise.Reps)
                    {
                        <span class="float-right mr-2">@repsAmount</span>
                    }
                </a>
            </div>
        }
    </div>
}

@code {
    [Parameter]
    public string WorkoutName { get; set; }
    public WorkoutHistory Workout { get; set; }
    public ExercisesCollection Exercises { get; set; }
    public List<string> IconStyles = new List<string>();
    public string IconStyle { get; set; } = "fas fa-arrow-right";

    protected override async Task OnInitializedAsync()
    {
        var exerciseResponse = await Http.Get<IList<WorkoutHistory>>($"{@Configuration["AppUrl"]}/exercises/history");
        Workout = exerciseResponse.FirstOrDefault();
        Exercises = new ExercisesCollection(exerciseResponse, WorkoutName);

        for (int i = 0; i < Workout.Routines.Count; i++)
        {
            IconStyles.Add(IconStyle);
        }
    }

    public void Toggle(int iconStyleIndex)
    {
        if (IconStyles[iconStyleIndex] == "fas fa-arrow-right")
        {
            IconStyles[iconStyleIndex] = "fas fa-arrow-left";
        }
        else
        {
            IconStyles[iconStyleIndex] = "fas fa-arrow-right";
        }
    }
}
